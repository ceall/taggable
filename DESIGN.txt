Taggable 1.3 Redesign
=====================

This is sort of an internal design document I put together for Taggable 1.3.

## Fieldtype ##

The fieldtype is now 100% the heart and soul of Taggable. Because we can store everything in exp\_channel\_data (and thus don't need the additional database table) I've decided to move everything into the fieldtype. It makes looking up entries based on tags slightly more complex, but it's only an extra SQL query. The fieldtype's tag looks like this:

{tags tag\_id="1" tag\_name="some tag" tag\_url\_name="some\_tag" orderby="id|name" sort="asc|desc" backspace="2"}
	{id}
	{name}
	{url_name}
	{entry_count}
{/tags}

This also means that all the settings can be handled directly in the fieldtype as fieldtype settings. This allows a per-field granularity previously impossible. 

## Lookups ##

When you want to view entries tagged with a specific tag, instead of using the previous module entries() method, you'll use the {exp:channel:entries} tag using the search:tags="={segment_2}" parameter. This means a few things. Firstly, it means that you can search multiple tag fields on the same channel. It also means that only one tag is necessary - you use the standard, simple ExpressionEngine search: parameter to do the lookups.

## Plugin ##

I've got rid of the module entirely, but there'll be one case when you want to pull out all the tags in the system and list them or create a tag cloud or something. This is what the plugin's used for. It has exactly the same API as above, only it's not limited by the channel entry:

{exp:taggable tag\_id="1" tag\_name="some tag" tag\_url\_name="some\_tag" orderby="id|name" sort="asc|desc" backspace="2"}
	{id}
	{name}
	{url_name}
	{entry_count}
{/exp:taggable}

## Importer/Exporter ##

I'm moving the importer/exporter into a separate add-on, packaged with the Taggable download. This means we've still got the Import/Export tools, but they don't clog up the system and require a MCP when Taggable doesn't need one.